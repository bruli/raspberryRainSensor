// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package http

import (
	"encoding/json"
	"fmt"
)

// This schema defines the response to read rain
type RainResponseJson struct {
	// IsRaining corresponds to the JSON schema field "is_raining".
	IsRaining bool `json:"is_raining"`

	// Value corresponds to the JSON schema field "value".
	Value int `json:"value"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *RainResponseJson) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["is_raining"]; !ok || v == nil {
		return fmt.Errorf("field is_raining: required")
	}
	if v, ok := raw["value"]; !ok || v == nil {
		return fmt.Errorf("field value: required")
	}
	type Plain RainResponseJson
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = RainResponseJson(plain)
	return nil
}
